#!/bin/bash -e

script_dir="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"

export user="${user:-u}"

export LC_ALL=C

main() {
    local cmd="command_$1"
    if is_function "$cmd"; then
        die "'$1' isn't a command"
    fi
    shift
    "$cmd" "$@"
}

die() {
    tput setaf 1 || true
    echo "$@"
    exit 1
    tput sgr0 || true
}

is_function() {
    type "$1" &>/dev/null | grep "^$1 ()"
}

command_get_sources() {
    cd "$script_dir"
    mkdir -p sources
    wget --input-file="res/wget-list" --continue --directory-prefix="sources"
    pushd sources
    md5sum -c ../res/md5sums || die bad sources
    popd
}

command_version_check() {
    if ! realpath /bin/sh | grep '^/bin/bash$'; then
        die "/bin/sh doesn't point to bash."
    fi

    set -o pipefail

    bash --version | head -n1 | cut -d" " -f2-4
    echo -n "Binutils: "; ld --version | head -n1 | cut -d" " -f3-
    bison --version | head -n1

    if [ -h /usr/bin/yacc ]; then
        echo "/usr/bin/yacc -> $(readlink -f /usr/bin/yacc)";
    elif [ -x /usr/bin/yacc ]; then
        echo "yacc is $(/usr/bin/yacc --version | head -n1)"
    else
        die "yacc not found"
    fi

    bzip2 --version 2>&1 < /dev/null | head -n1 | cut -d" " -f1,6-
    echo -n "Coreutils: "; chown --version | head -n1 | cut -d")" -f2
    diff --version | head -n1
    find --version | head -n1
    gawk --version | head -n1

    if [ -h /usr/bin/awk ]; then
        echo "/usr/bin/awk -> $(readlink -f /usr/bin/awk)";
    elif [ -x /usr/bin/awk ]; then
        echo "awk is $(/usr/bin/awk --version | head -n1)"
    else
        die "awk not found"
    fi

    gcc --version | head -n1
    g++ --version | head -n1
    ldd --version | head -n1 | cut -d' ' -f2-
    grep --version | head -n1
    gzip --version | head -n1
    cat /proc/version
    m4 --version | head -n1
    make --version | head -n1
    patch --version | head -n1
    echo "Perl $(perl -V:version)"
    sed --version | head -n1
    tar --version | head -n1
    makeinfo --version | head -n1
    xz --version | head -n1

    echo 'int main(){}' > dummy.c && g++ -o dummy dummy.c
    if [[ ! -x dummy ]]; then
        die "g++ compilation failed"
    fi
    rm -f dummy.c dummy

    set +o pipefail
}

main "$@"
